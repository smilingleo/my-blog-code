webpackJsonp([0xb000b7f59a22],{476:function(e,t){e.exports={pathContext:{posts:[{html:'<p>技术圈技术潮流真的是三十年河东，三十年河西。SOA不温不火N多年之后，换了个包装变成Microservice，就火了；之前很多RAD框架，很多DDD框架及产品也是很多年之后随着Low Code/No Code开始火了。Web圈感觉更是如此。服务端渲染框架如JSP在被以Angular, React, Vue等浏览器端渲染的SPA技术吊打多年之后，现在又逐渐开始有东山再起的苗头了。<a href="https://htmx.org/">HTMX</a>技术就是一个例子。</p>\n<p>其实这个技术本身也并不如何神奇，号称让任何html元素变成可ajax也不如何特殊，通过简单的javascript event callback机制都可以实现，不过HTMX采用声明式的定义，将需要用到Javascript的地方都用html element attribute来定义，就让一切变得不那么一样。看上去就像是一个纯静态的html</p>\n<pre><code class="language-html">&#x3C;div hx-post="/mouse_entered" hx-trigger="mouseenter once">\n    [Here Mouse, Mouse!]\n&#x3C;/div>\n</code></pre>\n<p>就是不知道将来会不会直接也变成一个新的HTML标准。</p>\n<h3>What HTMX Does</h3>\n<ul>\n<li>server side rendering</li>\n<li>empower any HTML element with the ability to send AJAX call (all HTTP methods)</li>\n<li>dynamically replace HTML of specified scope</li>\n</ul>\n<h3>Thymeleaf Template Engine</h3>\n<ul>\n<li>server side template engine</li>\n<li>Freemarker vs Velocity (markup tag based rather than plain text based?)</li>\n<li>layout :: fragment</li>\n<li>SpringMVC, return the <code>layout :: fragment</code></li>\n</ul>\n<p><a href="https://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html">https://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html</a></p>\n<h3>WebJars</h3>\n<ul>\n<li>wrap javascript libraries using Jars</li>\n<li>loading static assets???? </li>\n</ul>\n<h1>reading-note #web</h1>',id:"/volume1/homes/leo/github/my-blog-code/src/pages/2022/HTMX.md absPath of file >>> MarkdownRemark",frontmatter:{date:"2022-10-20T13:00:35.000+08:00",path:"/2022/server-side-rendering-htmx",title:"新服务器端渲染Web技术：HTMX",excerpt:"",tags:["htmx","web"]}}],tagName:"htmx"}}}});
//# sourceMappingURL=path---tags-htmx-d451006c257fab813abf.js.map